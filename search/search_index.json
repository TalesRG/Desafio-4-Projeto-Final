{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Esta documenta\u00e7\u00e3o est\u00e1 sendo mantida na branch <code>docs</code> para registro detalhado do projeto e suas evolu\u00e7\u00f5es.</p> <p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do projeto DETRAN! Esta \u00e9 a \u00faltima entrega do processo trainee 2.2024 da EngNet.</p> <p>Este projeto \u00e9 um sistema web completo para o DETRAN, contando com front-end e back-end desenvolvidos para oferecer uma experi\u00eancia eficiente e acess\u00edvel aos usu\u00e1rios.</p>"},{"location":"#sobre-o-projeto","title":"Sobre o Projeto","text":""},{"location":"#requisitos-funcionais","title":"Requisitos funcionais","text":"<ul> <li>Cadastro de motoristas, ve\u00edculos e multas.</li> <li>Consulta de motoristas, ve\u00edculos por motorista e multas.</li> <li>Consulta de pontua\u00e7\u00e3o de motoristas com 10 ou mais pontos.</li> <li>Integra\u00e7\u00e3o entre backend e frontend.</li> </ul>"},{"location":"#requisitos-nao-funcionais","title":"Requisitos N\u00e3o-Funcionais","text":"<ul> <li>Utilize a arquitetura apresentada no curso.</li> <li>Banco de dados MySQL.</li> <li>Inclua uma documenta\u00e7\u00e3o detalhada da API.</li> <li>Implemente logs para rastreamento de erros.</li> </ul>"},{"location":"#equipe","title":"Equipe","text":"Ana Bruno J\u00fanio Tales"},{"location":"#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Autor(es) Descri\u00e7\u00e3o <code>0.1</code> 22-01-2025 Bruno Vers\u00e3o inicial do documento/projeto."},{"location":"back-end/","title":"Back-end","text":""},{"location":"back-end/#tecnologias","title":"Tecnologias","text":"<ul> <li>NestJS<ul> <li>Um framework Node.js para construir aplica\u00e7\u00f5es server-side escal\u00e1veis e eficientes, utilizando TypeScript e inspirado no Angular.</li> </ul> </li> <li>TypeORM<ul> <li>Um ORM (Object-Relational Mapper) para TypeScript e JavaScript, que facilita a intera\u00e7\u00e3o com bancos de dados relacionais.</li> </ul> </li> <li>MySQL<ul> <li>Um sistema de gerenciamento de banco de dados relacional amplamente utilizado, conhecido por sua performance e confiabilidade.</li> </ul> </li> <li>Express<ul> <li>Um framework web minimalista para Node.js, utilizado para construir APIs e aplica\u00e7\u00f5es web de forma r\u00e1pida e simples.</li> </ul> </li> <li>JWT<ul> <li>Um padr\u00e3o aberto para autentica\u00e7\u00e3o e troca de informa\u00e7\u00f5es de forma segura utilizando tokens JSON.</li> </ul> </li> <li>TypeScript<ul> <li>Um superset do JavaScript que adiciona tipagem est\u00e1tica, ajudando a evitar erros e melhorar a manuten\u00e7\u00e3o do c\u00f3digo.</li> </ul> </li> <li>Bcrypt<ul> <li>Uma biblioteca para hashing de senhas, garantindo a seguran\u00e7a das credenciais dos usu\u00e1rios.</li> </ul> </li> </ul>"},{"location":"back-end/#endpoints-da-api","title":"Endpoints da API","text":""},{"location":"back-end/#agentedetransitocontroller","title":"AgenteDeTransitoController","text":""},{"location":"back-end/#get-agente-de-transitoall","title":"<code>GET /agente-de-transito/all</code>","text":"<p>Lista todos os agentes de tr\u00e2nsito. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#authcontroller","title":"AuthController","text":""},{"location":"back-end/#post-authlogin","title":"<code>POST /auth/login</code>","text":"<p>Realiza a autentica\u00e7\u00e3o do usu\u00e1rio (login).</p>"},{"location":"back-end/#infracaocontroller","title":"InfracaoController","text":""},{"location":"back-end/#post-infracaocadastrar","title":"<code>POST /infracao/cadastrar</code>","text":"<p>Cadastra uma nova infra\u00e7\u00e3o. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#get-infracaolistar","title":"<code>GET /infracao/listar</code>","text":"<p>Lista todas as infra\u00e7\u00f5es. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#get-infracaolistartipoinfracao","title":"<code>GET /infracao/listar/tipoInfracao</code>","text":"<p>Lista todos os tipos de infra\u00e7\u00e3o. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#get-infracaolistartipoinfracaoid","title":"<code>GET /infracao/listar/tipoInfracao/:id</code>","text":"<p>Lista um tipo de infra\u00e7\u00e3o espec\u00edfico pelo ID. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#localcontroller","title":"LocalController","text":""},{"location":"back-end/#get-localall","title":"<code>GET /local/all</code>","text":"<p>Lista todos os locais.</p>"},{"location":"back-end/#get-localbuscarid","title":"<code>GET /local/buscar/:id</code>","text":"<p>Busca um local espec\u00edfico pelo ID.</p>"},{"location":"back-end/#proprietariocontroller","title":"ProprietarioController","text":""},{"location":"back-end/#post-proprietario","title":"<code>POST /proprietario</code>","text":"<p>Cadastra um novo propriet\u00e1rio. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#get-proprietarioall","title":"<code>GET /proprietario/all</code>","text":"<p>Lista todos os propriet\u00e1rios. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#usuariocontroller","title":"UsuarioController","text":""},{"location":"back-end/#post-usuariocadastrar","title":"<code>POST /usuario/cadastrar</code>","text":"<p>Cadastra um novo usu\u00e1rio.</p>"},{"location":"back-end/#veiculocontroller","title":"VeiculoController","text":""},{"location":"back-end/#post-veiculo","title":"<code>POST /veiculo</code>","text":"<p>Cadastra um novo ve\u00edculo. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"back-end/#post-veiculoall","title":"<code>POST /veiculo/all</code>","text":"<p>Lista todos os ve\u00edculos. (Requer autentica\u00e7\u00e3o)</p>"},{"location":"front-end/","title":"Introdu\u00e7\u00e3o","text":""},{"location":"front-end/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A base do desenvolvimento front-end do projeto \u00e9 a biblioteca <code>React.js</code>, que permite a cria\u00e7\u00e3o de interfaces de usu\u00e1rio reativas e reutiliz\u00e1veis. Para facilitar o desenvolvimento, utilizamos o framework <code>Next.js</code>, que oferece funcionalidades adicionais como renderiza\u00e7\u00e3o do lado do servidor e gera\u00e7\u00e3o de sites est\u00e1ticos.</p>"},{"location":"front-end/#tecnologias","title":"Tecnologias","text":"<ul> <li>React.js<ul> <li>Uma biblioteca JavaScript para construir interfaces de usu\u00e1rio, permitindo a cria\u00e7\u00e3o de componentes reutiliz\u00e1veis.</li> </ul> </li> <li>Next.js<ul> <li>Um framework React para desenvolvimento de aplica\u00e7\u00f5es web com renderiza\u00e7\u00e3o do lado do servidor e gera\u00e7\u00e3o de sites est\u00e1ticos.</li> </ul> </li> <li>Tailwind CSS<ul> <li>Um framework CSS utilit\u00e1rio para estiliza\u00e7\u00e3o r\u00e1pida e eficiente de interfaces, utilizando classes pr\u00e9-definidas.</li> </ul> </li> <li>TypeScript<ul> <li>Um superset do JavaScript que adiciona tipagem est\u00e1tica, ajudando a evitar erros e melhorar a manuten\u00e7\u00e3o do c\u00f3digo.</li> </ul> </li> <li>Axios<ul> <li>Uma biblioteca para fazer requisi\u00e7\u00f5es HTTP, facilitando a comunica\u00e7\u00e3o com APIs.</li> </ul> </li> </ul>"},{"location":"front-end/#modelagem","title":"Modelagem","text":"<p>Para garantir uma experi\u00eancia de usu\u00e1rio eficiente e acess\u00edvel, a interface do projeto foi desenvolvida com o aux\u00edlio da ferramenta do figma, que permitiu a cria\u00e7\u00e3o de prot\u00f3tipos interativos e a defini\u00e7\u00e3o de um design agrad\u00e1vel.</p>              Abrir no Figma"},{"location":"front-end/#detalhamento","title":"Detalhamento","text":"<p>Para acessar a documenta\u00e7\u00e3o dos componenetes e das rotas</p>              Componentes                       Rotas"},{"location":"front-end/componentes/","title":"Componentes","text":""},{"location":"front-end/componentes/#organizacao-de-componentes-no-nextjs","title":"Organiza\u00e7\u00e3o de Componentes no Next.js","text":"<p>Este documento descreve a organiza\u00e7\u00e3o dos componentes do projeto Next.js no reposit\u00f3rio <code>Desafio-4-Projeto-Final</code>, especificamente na pasta <code>detran-front/src/app/ui</code>.</p>"},{"location":"front-end/componentes/#estrutura-da-pasta-ui","title":"Estrutura da Pasta <code>ui/</code>","text":"<p>A pasta <code>ui/</code> cont\u00e9m componentes reutiliz\u00e1veis e organizados de forma modular para facilitar a manuten\u00e7\u00e3o e escalabilidade do projeto. Abaixo est\u00e1 a estrutura atual:</p> <pre><code>ui/\n\u251c\u2500\u2500 home/\n\u2502   \u251c\u2500\u2500 proprietario/cadastro/\n\u2502   \u2502   \u251c\u2500\u2500 cpf-button.tsx\n\u2502   \u2502   \u251c\u2500\u2500 phone-button.tsx\n\u2502   \u2502   \u251c\u2500\u2500 sex-button.tsx\n\u2502   \u2502   \u2514\u2500\u2500 states-button.tsx\n\u2502   \u251c\u2500\u2500 types/\n\u2502   \u2502   \u251c\u2500\u2500 CardLinkProps.ts\n\u2502   \u2502   \u2514\u2500\u2500 SidebarItemProps.ts\n\u2502   \u251c\u2500\u2500 card-link.tsx\n\u2502   \u251c\u2500\u2500 dropdown-api.tsx\n\u2502   \u251c\u2500\u2500 logout-button.tsx\n\u2502   \u2514\u2500\u2500 navegation-link.tsx\n\u251c\u2500\u2500 button.tsx\n\u251c\u2500\u2500 detran-logo.tsx\n\u251c\u2500\u2500 generic-form.tsx\n\u251c\u2500\u2500 fonts.ts\n\u2514\u2500\u2500 toast.ts\n</code></pre>"},{"location":"front-end/componentes/#descricao-das-pastas-e-arquivos","title":"Descri\u00e7\u00e3o das Pastas e Arquivos","text":""},{"location":"front-end/componentes/#home","title":"<code>home/</code>","text":"<p>Cont\u00e9m componentes espec\u00edficos da tela inicial.</p>"},{"location":"front-end/componentes/#homeproprietariocadastro","title":"<code>home/proprietario/cadastro/</code>","text":"<p>Componentes relacionados ao cadastro de propriet\u00e1rios:</p> <ul> <li><code>cpf-button.tsx</code>: Bot\u00e3o espec\u00edfico para entrada de CPF.</li> <li><code>phone-button.tsx</code>: Bot\u00e3o espec\u00edfico para entrada de telefone.</li> <li><code>sex-button.tsx</code>: Bot\u00e3o para sele\u00e7\u00e3o de g\u00eanero.</li> <li><code>states-button.tsx</code>: Bot\u00e3o para sele\u00e7\u00e3o de estado.</li> </ul>"},{"location":"front-end/componentes/#hometypes","title":"<code>home/types/</code>","text":"<p>Define tipos e interfaces utilizados em componentes dentro de <code>home/</code>:</p> <ul> <li><code>CardLinkProps.ts</code>: Define a tipagem das propriedades do componente <code>card-link.tsx</code>.</li> <li><code>SidebarItemProps.ts</code>: Define a tipagem dos itens da barra lateral.</li> </ul>"},{"location":"front-end/componentes/#outros-componentes-em-home","title":"Outros componentes em <code>home/</code>","text":"<ul> <li><code>card-link.tsx</code>: Componente para exibi\u00e7\u00e3o de um link no formato de cart\u00e3o.</li> <li><code>dropdown-api.tsx</code>: Componente para um dropdown din\u00e2mico baseado em dados de API.</li> <li><code>logout-button.tsx</code>: Bot\u00e3o de logout.</li> <li><code>navegation-link.tsx</code>: Componente para links de navega\u00e7\u00e3o.</li> </ul>"},{"location":"front-end/componentes/#componentes-gerais-ui","title":"Componentes Gerais (<code>ui/</code>)","text":"<ul> <li><code>button.tsx</code>: Componente gen\u00e9rico de bot\u00e3o reutiliz\u00e1vel.</li> <li><code>detran-logo.tsx</code>: Componente de exibi\u00e7\u00e3o do logo do Detran.</li> <li><code>generic-form.tsx</code>: Formul\u00e1rio gen\u00e9rico para reaproveitamento em diferentes telas.</li> <li><code>fonts.ts</code>: Defini\u00e7\u00f5es de fontes utilizadas no projeto.</li> <li><code>toast.ts</code>: Implementa\u00e7\u00e3o de notifica\u00e7\u00f5es (toasts) para feedback ao usu\u00e1rio.</li> </ul>"},{"location":"front-end/componentes/#padroes-de-organizacao","title":"Padr\u00f5es de Organiza\u00e7\u00e3o","text":"<ul> <li>Modulariza\u00e7\u00e3o: Componentes s\u00e3o organizados por funcionalidade, reduzindo a complexidade do c\u00f3digo.</li> <li>Reutiliza\u00e7\u00e3o: Componentes gen\u00e9ricos (como <code>button.tsx</code> e <code>toast.ts</code>) s\u00e3o centralizados para evitar duplica\u00e7\u00e3o de c\u00f3digo.</li> <li>Tipagem Estrita: Uso de arquivos <code>*.ts</code> para definir interfaces e garantir tipagem consistente.</li> <li>Hierarquia Clara: A estrutura reflete as se\u00e7\u00f5es da aplica\u00e7\u00e3o, facilitando a navega\u00e7\u00e3o no c\u00f3digo.</li> </ul>"},{"location":"front-end/componentes/#conclusao","title":"Conclus\u00e3o","text":"<p>Essa organiza\u00e7\u00e3o permite maior escalabilidade, reutiliza\u00e7\u00e3o de c\u00f3digo e facilidade de manuten\u00e7\u00e3o.</p>"},{"location":"front-end/rotas/","title":"Rotas","text":""},{"location":"front-end/rotas/#organizacao-de-rotas-no-nextjs","title":"Organiza\u00e7\u00e3o de Rotas no Next.js","text":"<p>Este documento descreve a organiza\u00e7\u00e3o das rotas no projeto Next.js presente no reposit\u00f3rio <code>Desafio-4-Projeto-Final</code>, utilizando a estrutura App Router (<code>app/</code>).</p>"},{"location":"front-end/rotas/#estrutura-da-pasta-srcapp","title":"Estrutura da Pasta <code>src/app/</code>","text":"<p>O projeto adota a arquitetura modular do App Router, garantindo maior organiza\u00e7\u00e3o e escalabilidade. Abaixo est\u00e1 a estrutura de rotas definida:</p> <pre><code>.\n\u251c\u2500\u2500 public/\n\u2502   \u2514\u2500\u2500 assets/               # Arquivos est\u00e1ticos (imagens, \u00edcones, etc.)\n\u2514\u2500\u2500 src/\n    \u251c\u2500\u2500 app/\n    \u2502   \u251c\u2500\u2500 home/\n    \u2502   \u2502   \u251c\u2500\u2500 carro/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 cadastro/\n    \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx  # P\u00e1gina de cadastro de carro\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx       # P\u00e1gina principal da se\u00e7\u00e3o de carros\n    \u2502   \u2502   \u251c\u2500\u2500 multa/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 cadastro/\n    \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx  # P\u00e1gina de cadastro de multas\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx       # P\u00e1gina principal da se\u00e7\u00e3o de multas\n    \u2502   \u2502   \u251c\u2500\u2500 propriet\u00e1rio/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 cadastro/\n    \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx  # P\u00e1gina de cadastro de propriet\u00e1rios\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx       # P\u00e1gina principal da se\u00e7\u00e3o de propriet\u00e1rios\n    \u2502   \u2502   \u251c\u2500\u2500 layout.tsx         # Estrutura de layout da se\u00e7\u00e3o \"home\"\n    \u2502   \u2502   \u2514\u2500\u2500 page.tsx           # P\u00e1gina inicial\n    \u2502   \u251c\u2500\u2500 register/\n    \u2502   \u2502   \u2514\u2500\u2500 page.tsx           # P\u00e1gina de cadastro de usu\u00e1rios\n    \u2502   \u251c\u2500\u2500 ui/\n    \u2502   \u2502   \u251c\u2500\u2500 home/\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 types/\n    \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 CardLinkProps.ts\n    \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 SidebarItemProps.ts\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 card-link.tsx\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500 logout-button.tsx\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 navegation-link.tsx\n    \u2502   \u2502   \u251c\u2500\u2500 button.tsx\n    \u2502   \u2502   \u251c\u2500\u2500 detran-logo.tsx\n    \u2502   \u2502   \u251c\u2500\u2500 fonts.ts\n    \u2502   \u2502   \u2514\u2500\u2500 generic-form.tsx\n    \u2502   \u251c\u2500\u2500 global.css              # Estilos globais\n    \u2502   \u251c\u2500\u2500 layout.tsx              # Layout global do projeto\n    \u2502   \u2514\u2500\u2500 page.tsx                # P\u00e1gina principal\n    \u251c\u2500\u2500 service/\n    \u2502   \u251c\u2500\u2500 api.ts                  # Configura\u00e7\u00e3o de API \n    \u2502   \u2514\u2500\u2500 user.ts                  # Intera\u00e7\u00f5es com usu\u00e1rios\n    \u2514\u2500\u2500 type/\n        \u251c\u2500\u2500 UsuarioLogin.ts          # Tipagem para login de usu\u00e1rios\n        \u2514\u2500\u2500 UsuarioRegister.ts       # Tipagem para registro de usu\u00e1rios\n</code></pre>"},{"location":"front-end/rotas/#descricao-das-rotas","title":"Descri\u00e7\u00e3o das Rotas","text":""},{"location":"front-end/rotas/#home","title":"<code>home/</code>","text":"<p>A pasta <code>home/</code> cont\u00e9m as principais p\u00e1ginas da aplica\u00e7\u00e3o:</p> <ul> <li><code>carro/</code>: P\u00e1gina principal <code>page.tsx</code> e rota de cadastro <code>cadastro/page.tsx</code></li> <li><code>multa/</code>: P\u00e1gina principal <code>page.tsx</code> e rota de cadastro <code>cadastro/page.tsx</code></li> <li><code>propriet\u00e1rio/</code>: P\u00e1gina principal <code>page.tsx</code> e rota de cadastro <code>cadastro/page.tsx</code></li> <li><code>layout.tsx</code>: Define a estrutura visual da se\u00e7\u00e3o <code>home</code></li> <li><code>page.tsx</code>: P\u00e1gina inicial do aplicativo</li> </ul>"},{"location":"front-end/rotas/#register","title":"<code>register/</code>","text":"<ul> <li>Cont\u00e9m <code>page.tsx</code>, a p\u00e1gina destinada ao cadastro de novos usu\u00e1rios.</li> </ul>"},{"location":"front-end/rotas/#ui-componentes-reutilizaveis","title":"<code>ui/</code> (Componentes Reutiliz\u00e1veis)","text":"<ul> <li>Cont\u00e9m componentes como:<ul> <li><code>card-link.tsx</code>, <code>logout-button.tsx</code>, <code>navegation-link.tsx</code></li> <li>Tipos TypeScript (<code>CardLinkProps.ts</code>, <code>SidebarItemProps.ts</code>)</li> </ul> </li> </ul>"},{"location":"front-end/rotas/#globalcss","title":"<code>global.css</code>","text":"<ul> <li>Cont\u00e9m os estilos globais do projeto e estiliza\u00e7\u00e3o espec\u00edfica do <code>input</code> e <code>button</code>.</li> </ul>"},{"location":"front-end/rotas/#layouttsx","title":"<code>layout.tsx</code>","text":"<ul> <li>Define o layout geral do aplicativo.</li> </ul>"},{"location":"front-end/rotas/#service","title":"<code>service/</code>","text":"<ul> <li><code>api.ts</code>: Gerencia chamadas para a API (provavelmente configurado com Axios).</li> <li><code>user.ts</code>: Lida com intera\u00e7\u00f5es e dados do usu\u00e1rio.</li> </ul>"},{"location":"front-end/rotas/#type","title":"<code>type/</code>","text":"<ul> <li><code>UsuarioLogin.ts</code> e <code>UsuarioRegister.ts</code>: Definem a tipagem para autentica\u00e7\u00e3o e registro de usu\u00e1rios.</li> </ul>"},{"location":"front-end/rotas/#padroes-seguidos","title":"Padr\u00f5es Seguidos","text":"<ul> <li>Arquitetura Modular: O uso do App Router permite separar rotas por contexto.</li> <li>Organiza\u00e7\u00e3o Escal\u00e1vel: Estrutura clara e bem definida para f\u00e1cil manuten\u00e7\u00e3o.</li> <li>Reutiliza\u00e7\u00e3o de C\u00f3digo: Componentes na pasta <code>ui/</code> evitam duplica\u00e7\u00e3o.</li> <li>Tipagem Estrita: Uso de TypeScript para maior seguran\u00e7a no desenvolvimento.</li> </ul>"},{"location":"front-end/rotas/#conclusao","title":"Conclus\u00e3o","text":"<p>A estrutura de rotas do projeto facilita a organiza\u00e7\u00e3o, garantindo um desenvolvimento escal\u00e1vel e modular. </p>"}]}